trigger:
  - master

resources:
  - repo: self

variables:
  dockerRegistryServiceConnection: 'service-connection-name'
  imageRepository: "repo-name"
  containerRegistry: "container-registry-address"
  dockerfilePath: "**/Dockerfile"
  tag: "$(Build.BuildId)"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Test
    displayName: "Test"
    jobs:
      - job: "GradleTest"
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Gradle@2
            inputs:
              gradleWrapperFile: "gradlew"
              tasks: "clean build test"
              jdkVersionOption: 1.11

  - stage: Build
    displayName: Build Image
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Gradle@2
            inputs:
              gradleWrapperFile: "gradlew"
              tasks: "build"
              jdkVersionOption: 1.11
          - task: Docker@2
            displayName: Build and push Docker image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest

  - stage: DeploySandbox
    displayName: Deploy to Sandbox
    dependsOn: Build
    jobs:
      - deployment: Deploy
        displayName: Deploy to K8S
        pool:
          vmImage: $(vmImageName)
        environment: "sandbox.default"
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - checkout: self
                - task: KubernetesManifest@0
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    action: deploy
                    manifests: |
                      $(System.DefaultWorkingDirectory)/deployment.yml
                    containers: |
                      $(containerRegistry)/$(imageRepository):$(tag)